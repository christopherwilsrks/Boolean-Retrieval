<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
	<display-name>Archetype Created Web Application</display-name>
	
	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	<!-- 前端控制器配置 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器、映射器、适配器等等） -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<multipart-config>
			<location>/home/tmp</location>
			<max-file-size>2097152</max-file-size>
			<max-request-size>4194304</max-request-size>
		</multipart-config>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!--
		第一种:*.action,访问以.action三结尾，由DispatcherServlet进行解析
		第二种:/,所有访问的地址由DispatcherServlet进行解析，对静态文件的解析需要配置不让DispatcherServlet进行解析，
				使用此种方式和实现RESTful风格的url
		第三种:/*,这样配置不对，使用这种配置，最终要转发到一个jsp页面时，仍然会由DispatcherServlet解析jsp地址，
				不能根据jsp页面找到handler，会报错
		-->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!--&lt;!&ndash; springmvc前端控制器，rest配置 &ndash;&gt;-->
	<!--<servlet>-->
	<!--<servlet-name>springmvc_rest</servlet-name>-->
	<!--<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
	<!--&lt;!&ndash; contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等） 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml） &ndash;&gt;-->
	<!--<init-param>-->
	<!--<param-name>contextConfigLocation</param-name>-->
	<!--<param-value>classpath:spring/springmvc.xml</param-value>-->
	<!--</init-param>-->
	<!--</servlet>-->
	<!---->
	<!--<servlet-mapping>-->
	<!--<servlet-name>springmvc_rest</servlet-name>-->
	<!--<url-pattern>/</url-pattern>-->
	<!--</servlet-mapping>-->
	
	
	<!-- post乱码过虑器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
<!--	 web异常页面处理
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/errors/error_500.action</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/errors/error_404.action</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/errors/error_500.action</location>
	</error-page>
	<error-page>
		<error-code>501</error-code>
		<location>/errors/error_500.action</location>
	</error-page>
	<error-page>
		<error-code>502</error-code>
		<location>/errors/error_500.action</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/errors/error_404.action</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/errors/error_404.action</location>
	</error-page>
	<error-page>
		<error-code>400</error-code>
		<location>/errors/error_404.action</location>
	</error-page>-->

</web-app>

